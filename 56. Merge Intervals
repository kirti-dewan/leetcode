class Solution {
public:
    static bool comp(vector<int> &i1, vector<int> &i2)
    {
        return (i1[0]<i2[0]);
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals)
    {
        if(intervals.empty())
        {
            return intervals;
        }
        sort(intervals.begin(),intervals.end(), comp);    //sort the gievn vector acc to their start time
        vector<vector<int>> ans;
       // vector<int> t;
        ans.push_back(intervals[0]);      //push back the first interval,start comparing to this one
        int i=1,j;
        for(i=1;i<intervals.size();i++)
        {
          if(ans.back()[1]<intervals[i][0])
          {
              ans.push_back(intervals[i]);    //if no overlaps
          }
          else
          {
              ans.back()[1]=max(ans.back()[1],intervals[i][1]);       //if overlapping
          }
        }
        return ans;
        
    }
};
